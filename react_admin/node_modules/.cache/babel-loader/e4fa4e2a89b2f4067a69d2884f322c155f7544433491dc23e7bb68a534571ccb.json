{"ast":null,"code":"/**\r\n * 进行local数据存储管理的工具模块\r\n */\n\nimport store from \"store\";\nconst USER_KEY = 'user_key';\nconst user = {\n  //保存\n  saveUser(user) {\n    // localStorage.setItem(\"user_key\", JSON.stringify(user))\n    // 原生封装有时候不是很兼容，在这里我们可以使用store这样一个库\n    return store.set(USER_KEY, user);\n  },\n  //读取\n  getUser() {\n    // 没有值的话就是返回的null，最后给我返回一个空对象，然后我点什么属性的时候不会报错\n    // return JSON.parse(localStorage.getItem(\"user_key\") || \"{}\")\n    return store.get(USER_KEY) || {};\n  },\n  //删除\n  removeUser() {\n    // localStorage.removeItem(\"user_key\")\n    return store.remove(USER_KEY);\n  }\n};\nexport default user;","map":{"version":3,"names":["store","USER_KEY","user","saveUser","set","getUser","get","removeUser","remove"],"sources":["E:/ysy_react/react_admin/src/utils/storageUtils.js"],"sourcesContent":["/**\r\n * 进行local数据存储管理的工具模块\r\n */\r\n\r\nimport store from \"store\"\r\nconst USER_KEY = 'user_key'\r\nconst user = {\r\n    //保存\r\n    saveUser(user) {\r\n        // localStorage.setItem(\"user_key\", JSON.stringify(user))\r\n        // 原生封装有时候不是很兼容，在这里我们可以使用store这样一个库\r\n        return store.set(USER_KEY,user)\r\n    },\r\n    //读取\r\n    getUser() {\r\n        // 没有值的话就是返回的null，最后给我返回一个空对象，然后我点什么属性的时候不会报错\r\n        // return JSON.parse(localStorage.getItem(\"user_key\") || \"{}\")\r\n        return store.get(USER_KEY)||{}\r\n    },\r\n    //删除\r\n    removeUser() {\r\n        // localStorage.removeItem(\"user_key\")\r\n        return store.remove(USER_KEY)\r\n    }\r\n}\r\nexport default user"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,IAAI,GAAG;EACT;EACAC,QAAQ,CAACD,IAAI,EAAE;IACX;IACA;IACA,OAAOF,KAAK,CAACI,GAAG,CAACH,QAAQ,EAACC,IAAI,CAAC;EACnC,CAAC;EACD;EACAG,OAAO,GAAG;IACN;IACA;IACA,OAAOL,KAAK,CAACM,GAAG,CAACL,QAAQ,CAAC,IAAE,CAAC,CAAC;EAClC,CAAC;EACD;EACAM,UAAU,GAAG;IACT;IACA,OAAOP,KAAK,CAACQ,MAAM,CAACP,QAAQ,CAAC;EACjC;AACJ,CAAC;AACD,eAAeC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}